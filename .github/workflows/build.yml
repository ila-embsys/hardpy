name: CI

on:
  workflow_dispatch:
  push:
      branches:
        - main
        - dev

jobs:
  build: 
    name: Build
    runs-on: ubuntu-latest
    env:
      NODE_VERSION: "20.x"
      YARN_VERSION: "4.0.1"
    steps:
      - uses: actions/checkout@v4
      - name: Set Node.js 20.x
        uses: actions/setup-node@v3
        with:
            node-version: 20.x
      - name: Set up Yarn
        run: corepack enable; yarn set version $YARN_VERSION
      - name: Set up Python
        # This is the version of the action for setting up Python, not the Python version.
        uses: actions/setup-python@v4
        with:
          # Semantic version range syntax or exact version of a Python version
          python-version: '3.x'
          # Optional - x64 or x8
          architecture: 'x64'
          cache: 'pip' # caching pip dependencies
      - name: Install dependencies
        run: python -m pip install .[build] twine
      - name: Building dist
        run: python -m build
      - name: Store the distribution packages
        uses: actions/upload-artifact@v3
        with:
          name: python-package-distributions
          path: dist/

  github-release:
    if: startsWith(github.event.ref, 'refs/tags/')
    name: >-
      Sign the Python 🐍 distribution 📦 with Sigstore
      and upload them to GitHub Release
    runs-on: ubuntu-latest

    permissions:
      contents: write  # IMPORTANT: mandatory for making GitHub Releases
      id-token: write  # IMPORTANT: mandatory for sigstore

    steps:
    - name: Download all the dists
      uses: actions/download-artifact@v3
      with:
        name: python-package-distributions
        path: dist/
    - name: Sign the dists with Sigstore
      uses: sigstore/gh-action-sigstore-python@v1.2.3
      with:
        inputs: >-
          ./dist/*.tar.gz
          ./dist/*.whl
    - name: Create GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: >-
        gh release create
        '${{ github.ref_name }}'
        --repo '${{ github.repository }}'
        --notes ""
    - name: Upload artifact signatures to GitHub Release
      env:
        GITHUB_TOKEN: ${{ github.token }}
      # Upload to GitHub Release using the `gh` CLI.
      # `dist/` contains the built packages, and the
      # sigstore-produced signatures and certificates.
      run: >-
        gh release upload
        '${{ github.ref_name }}' dist/**
        --repo '${{ github.repository }}'

